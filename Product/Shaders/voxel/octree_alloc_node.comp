#include "octree_common.h"
layout(local_size_x = GROUP_SIZE, local_size_y = 1, local_size_z = 1) in;

layout(binding = OCTREE_BINDING_COUNTER) buffer uuCounter { uint uCounter; };
layout(binding = OCTREE_BINDING_OCTREE) buffer uuOctree { uvec3 uOctree[]; };
layout(binding = OCTREE_BINDING_BUILDINFO) readonly buffer uuBuildInfo { uint uAllocBegin, uAllocNum; };

void main()
{
	if (gl_GlobalInvocationID.x >= uAllocNum)
		return;
	uint idx = gl_GlobalInvocationID.x + uAllocBegin;
	if ((uOctree[idx][OCTREE_COLOR_INDEX] & 0x80000000u) > 0u)
	{
		uOctree[idx][OCTREE_COLOR_INDEX] = ((atomicAdd(uCounter, 1u) + 1u) << 3u) | 0x80000000u;
	}
}