#include "public.h"
#include "voxel/clipmap/voxel_clipmap_common.h"

layout (local_size_x = VOXEL_CLIPMAP_GROUP_SIZE, local_size_y = VOXEL_CLIPMAP_GROUP_SIZE, local_size_z = VOXEL_CLIPMAP_GROUP_SIZE) in;

layout(binding = VOXEL_CLIPMAP_BINDING_RADIANCE, rgba8) uniform writeonly image3D voxelRadiance;

layout(binding = BINDING_OBJECT)
uniform Object
{
	uint level;
} object;

void main()
{
	if(gl_GlobalInvocationID.x >= volumeDimension ||
		gl_GlobalInvocationID.y >= volumeDimension ||
		gl_GlobalInvocationID.z >= volumeDimension) return;

	uint level = object.level;

	ivec3 writePos = ivec3(gl_GlobalInvocationID);

    // Target the correct clipmap level 
	writePos += ivec3(borderSize);
	writePos.y += int((volumeDimension + 2 * borderSize) * int(level));

	// clear the volumnes with 0,0,0,0
	imageStore(voxelRadiance, writePos, vec4(0));
}