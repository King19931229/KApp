#include "vg_default_binding.h"
#include "vg_define.h"
#include "wave.h"

layout(local_size_x = VG_GROUP_SIZE, local_size_y = 1, local_size_z = 1) in;
void main()
{
	uint globalIndex = gl_GlobalInvocationID.x;
	if (globalIndex < numBinning)
	{
		uint binningIndex = globalIndex;
		uint binningBatchNum = BinningHeader[binningIndex].x;
		WAVE_INTERLOCK_ADD(QueueState[0].binningWriteOffset, binningBatchNum, BinningHeader[binningIndex].y);

		uint offset = 0;

		offset = binningIndex * 4;
		offset += INDIRECT_DRAW_ARGS_OFFSET;

		// vertexCount
		IndirectDrawArgs[offset + 0] = MAX_CLUSTER_TRIANGLE_NUM * 3;
		// instanceCount
		IndirectDrawArgs[offset + 1] = 0;
		// firstVertex
		IndirectDrawArgs[offset + 2] = 0;
		// firstInstance	
		IndirectDrawArgs[offset + 3] = 0;

		offset = binningIndex * 3;
		offset += INDIRECT_MESH_ARGS_OFFSET;
 
		// groupCountX
		IndirectMeshArgs[offset + 0] = 0;
		// groupCountY
		IndirectMeshArgs[offset + 1] = 1;
		// groupCountZ
		IndirectMeshArgs[offset + 2] = 1;
	}
}