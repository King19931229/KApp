dnl $Id: m4.links,v 10.410 2008/01/28 23:59:31 sarette Exp $
dnl
dnl #################################################################
dnl Build a hot link to a structure/class file based on the API.
dnl	$1: C name
dnl	$2: C++ name
dnl	$3: file name
dnl #################################################################
define(_m4_class, [dnl
ifelse(M4API, CXX_API, [m4_link(_m4_api/$3, $2)],
	$1, NOAPI, UNREF==$1, [m4_link(_m4_api/$3, $1)])])
dnl
dnl #################################################################
dnl Build a name based on the API.
dnl	$1: C function
dnl	$2: C++ class
dnl	$3: C++ name
dnl
dnl If a non-existent API is referenced from a C page, it's probably a bug,
dnl but just reference the C++ version.
dnl #################################################################
define(_m4_name, [ifelse(dnl
M4API, CXX_API, [$2::$3],
[$1], NOAPI, [$2::$3], [$1])])
dnl
dnl #################################################################
dnl Build a hot link to a function/method based on the API.
dnl	$1: C function
dnl	$2: C++ class
dnl	$3: C++ name
dnl	$4: file name
dnl
dnl If a non-existent API is referenced from a C page, it's probably a bug,
dnl but just reference the C++ version.  There are C APIs referenced
dnl from C++ legitimately, so if there's no C++ API, just reference the C API.
dnl #################################################################
define(_m4_ref, [dnl
ifelse(M4API, CXX_API,dnl
[ifelse($3, NOAPI,dnl
[m4_link(M4RELDIR/api_c/$4, $1)], [m4_link(_m4_api/$4, $2::$3)])],dnl
[ifelse($1, NOAPI,dnl
[m4_link(M4RELDIR/api_cxx/$4, $2::$3)], [m4_link(_m4_api/$4, $1)])])])
dnl
dnl #################################################################
dnl Build a hot link to a name based on the API.
dnl	$1: string to display
dnl	$2: address string in the HTML
dnl	$3: file name
dnl
dnl If a non-existent file is referenced from a C page, it's probably a bug,
dnl but just reference the C++ version.  There are C APIs referenced
dnl from C++ legitimately, so if there's no C++ API, just reference the C API.
dnl #################################################################
define(_m4_nref, [m4_linkpage(_m4_api/$3, $2, $1)])
dnl
dnl #################################################################
dnl List of possible references.
dnl	$1: name
dnl #################################################################
define(m4_ref, [_m4_lref([$1], M4PAGELOCAL)])
dnl
dnl #################################################################
dnl If $1 matches a string in the M4PAGELOCAL define, format the name,
dnl and don't bother with the link.  We don't want to duplicate the
dnl entire table for name translation, so we push new definitions of
dnl the interesting macros onto a stack.
dnl #################################################################
define(_m4_lref, [dnl
ifelse($2,, _m4_list($1), $2, $1, [dnl
pushdef([_m4_ref], [_m4_name]($[1], $[2], $[3]))dnl
pushdef([_m4_class],ifelse(M4API, C_API, $[1], $[2]))dnl
pushdef([m4_link],$[2])dnl
pushdef([m4_linkpage],$[3])dnl
pushdef([_m4_nref],$[1])dnl
_m4_list($1)[]dnl
popdef([_m4_ref])dnl
popdef([_m4_class])dnl
popdef([m4_link])dnl
popdef([m4_linkpage])dnl
popdef([_m4_nref])],dnl
[_m4_lref($1, shift(shift($@)))])])
dnl #################################################################
dnl List of references.
dnl	$1: name
dnl #################################################################
define(_m4_list, [ifelse(dnl
dnl #################################################################
dnl Environment
dnl #################################################################
$1, DbEnv, _m4_class(DB_ENV, DbEnv, env_class),
$1, dbenv_close, _m4_ref(DB_ENV-__GT__close, DbEnv, close, env_close),
$1, dbenv_create, _m4_ref(db_env_create, NOAPI, NOAPI, env_class),
$1, dbenv_dbremove, _m4_ref(DB_ENV-__GT__dbremove, DbEnv, dbremove, env_dbremove),
$1, dbenv_dbrename, _m4_ref(DB_ENV-__GT__dbrename, DbEnv, dbrename, env_dbrename),
$1, dbenv_err, _m4_ref(DB_ENV-__GT__err, DbEnv, err, env_err),
$1, dbenv_errx, _m4_ref(DB_ENV-__GT__errx, DbEnv, errx, env_err),
$1, dbenv_failchk, _m4_ref(DB_ENV-__GT__failchk, DbEnv, failchk, env_failchk),
$1, dbenv_fileid_reset, _m4_ref(DB_ENV-__GT__fileid_reset, DbEnv, fileid_reset, env_fileid_reset),
$1, dbenv_get_cachesize, _m4_ref(DB_ENV-__GT__get_cachesize, DbEnv, get_cachesize, env_set_cachesize),
$1, dbenv_get_cache_max, _m4_ref(DB_ENV-__GT__get_cache_max, DbEnv, get_cache_max, env_set_cache_max),
$1, dbenv_get_data_dirs, _m4_ref(DB_ENV-__GT__get_data_dirs, DbEnv, get_data_dirs, env_set_data_dir),
$1, dbenv_get_encrypt_flags, _m4_ref(DB_ENV-__GT__get_encrypt_flags, DbEnv, get_encrypt_flags, env_set_encrypt),
$1, dbenv_get_errfile, _m4_ref(DB_ENV-__GT__get_errfile, DbEnv, get_errfile, env_set_errfile),
$1, dbenv_get_errpfx, _m4_ref(DB_ENV-__GT__get_errpfx, DbEnv, get_errpfx, env_set_errpfx),
$1, dbenv_get_flags, _m4_ref(DB_ENV-__GT__get_flags, DbEnv, get_flags, env_set_flag),
$1, dbenv_get_home, _m4_ref(DB_ENV-__GT__get_home, DbEnv, get_home, env_open),
$1, dbenv_get_intermediate_dir_mode, _m4_ref(DB_ENV-__GT__get_intermediate_dir_mode, DbEnv, get_intermediate_dir_mode, env_set_intermediate_dir_mode),
$1, dbenv_get_lg_bsize, _m4_ref(DB_ENV-__GT__get_lg_bsize, DbEnv, get_lg_bsize, env_set_lg_bsize),
$1, dbenv_get_lg_dir, _m4_ref(DB_ENV-__GT__get_lg_dir, DbEnv, get_lg_dir, env_set_lg_dir),
$1, dbenv_get_lg_filemode, _m4_ref(DB_ENV-__GT__set_lg_filemode, DbEnv, set_lg_filemode, env_set_lg_mode),
$1, dbenv_get_lg_max, _m4_ref(DB_ENV-__GT__get_lg_max, DbEnv, get_lg_max, env_set_lg_max),
$1, dbenv_get_lg_regionmax, _m4_ref(DB_ENV-__GT__get_lg_regionmax, DbEnv, get_lg_regionmax, env_set_lg_regionmax),
$1, dbenv_get_lk_conflicts, _m4_ref(DB_ENV-__GT__get_lk_conflicts, DbEnv, get_lk_conflicts, env_set_lk_conflicts),
$1, dbenv_get_lk_detect, _m4_ref(DB_ENV-__GT__get_lk_detect, DbEnv, get_lk_detect, env_set_lk_detect),
$1, dbenv_get_lk_max_lockers, _m4_ref(DB_ENV-__GT__get_lk_max_lockers, DbEnv, get_lk_max_lockers, env_set_lk_max_lockers),
$1, dbenv_get_lk_max_locks, _m4_ref(DB_ENV-__GT__get_lk_max_locks, DbEnv, get_lk_max_locks, env_set_lk_max_locks),
$1, dbenv_get_lk_max_objects, _m4_ref(DB_ENV-__GT__get_lk_max_objects, DbEnv, get_lk_max_objects, env_set_lk_max_objects),
$1, dbenv_get_lk_partitions, _m4_ref(DB_ENV-__GT__get_lk_partitions, DbEnv, get_lk_partitions, env_set_lk_partitions),
$1, dbenv_get_mp_mmapsize, _m4_ref(DB_ENV-__GT__get_mp_mmapsize, DbEnv, get_mp_mmapsize, env_set_mp_mmapsize),
$1, dbenv_get_msgfile, _m4_ref(DB_ENV-__GT__get_msgfile, DbEnv, get_msgfile, env_get_msgfile),
$1, dbenv_get_open_flags, _m4_ref(DB_ENV-__GT__get_open_flags, DbEnv, get_open_flags, env_open),
$1, dbenv_get_shm_key, _m4_ref(DB_ENV-__GT__get_shm_key, DbEnv, get_shm_key, env_set_shm_key),
$1, dbenv_get_thread_count, _m4_ref(DB_ENV-__GT__get_thread_count, DbEnv, get_thread_count, env_set_thread_count),
$1, dbenv_get_timeout, _m4_ref(DB_ENV-__GT__get_timeout, DbEnv, get_timeout, env_set_timeout),
$1, dbenv_get_tmp_dir, _m4_ref(DB_ENV-__GT__get_tmp_dir, DbEnv, get_tmp_dir, env_set_tmp_dir),
$1, dbenv_get_tx_max, _m4_ref(DB_ENV-__GT__get_tx_max, DbEnv, get_tx_max, env_set_tx_max),
$1, dbenv_get_tx_timestamp, _m4_ref(DB_ENV-__GT__get_tx_timestamp, DbEnv, get_tx_timestamp, env_set_tx_timestamp),
$1, dbenv_get_verbose, _m4_ref(DB_ENV-__GT__get_verbose, DbEnv, get_verbose, env_set_verbose),
$1, dbenv_get_version_major, _m4_ref(NOAPI, DbEnv, get_version_major, env_version),
$1, dbenv_get_version_minor, _m4_ref(NOAPI, DbEnv, get_version_minor, env_version),
$1, dbenv_get_version_patch, _m4_ref(NOAPI, DbEnv, get_version_patch, env_version),
$1, dbenv_get_version_string, _m4_ref(NOAPI, DbEnv, get_version_string, env_version),
$1, dbenv_log_get_config, _m4_ref(DB_ENV-__GT__log_get_config, DbEnv, log_get_config, env_log_set_config),
$1, dbenv_log_set_config, _m4_ref(DB_ENV-__GT__log_set_config, DbEnv, log_set_config, env_log_set_config),
$1, dbenv_lsn_reset, _m4_ref(DB_ENV-__GT__lsn_reset, DbEnv, lsn_reset, env_lsn_reset),
$1, dbenv_open, _m4_ref(DB_ENV-__GT__open, DbEnv, open, env_open),
$1, dbenv_remove, _m4_ref(DB_ENV-__GT__remove, DbEnv, remove, env_remove),
$1, dbenv_set_alloc, _m4_ref(DB_ENV-__GT__set_alloc, DbEnv, set_alloc, env_set_alloc),
$1, dbenv_set_app_dispatch, _m4_ref(DB_ENV-__GT__set_app_dispatch, DbEnv, set_app_dispatch, env_set_app_dispatch),
$1, dbenv_set_cachesize, _m4_ref(DB_ENV-__GT__set_cachesize, DbEnv, set_cachesize, env_set_cachesize),
$1, dbenv_set_cache_max, _m4_ref(DB_ENV-__GT__set_cache_max, DbEnv, set_cache_max, env_set_cache_max),
$1, dbenv_set_data_dir, _m4_ref(DB_ENV-__GT__set_data_dir, DbEnv, set_data_dir, env_set_data_dir),
$1, dbenv_set_encrypt, _m4_ref(DB_ENV-__GT__set_encrypt, DbEnv, set_encrypt, env_set_encrypt),
$1, dbenv_set_errcall, _m4_ref(DB_ENV-__GT__set_errcall, DbEnv, set_errcall, env_set_errcall),
$1, dbenv_set_errfile, _m4_ref(DB_ENV-__GT__set_errfile, DbEnv, set_errfile, env_set_errfile),
$1, dbenv_set_error_stream, _m4_ref(NOAPI, DbEnv, set_error_stream, env_set_error_stream),
$1, dbenv_set_errpfx, _m4_ref(DB_ENV-__GT__set_errpfx, DbEnv, set_errpfx, env_set_errpfx),
$1, dbenv_set_event_notify, _m4_ref(DB_ENV-__GT__set_event_notify, DbEnv, set_event_notify, env_event_notify),
$1, dbenv_set_feedback, _m4_ref(DB_ENV-__GT__set_feedback, DbEnv, set_feedback, env_set_feedback),
$1, dbenv_set_flags, _m4_ref(DB_ENV-__GT__set_flags, DbEnv, set_flags, env_set_flags),
$1, dbenv_set_intermediate_dir_mode, _m4_ref(DB_ENV-__GT__set_intermediate_dir_mode, DbEnv, set_intermediate_dir_mode, env_set_intermediate_dir_mode),
$1, dbenv_set_isalive, _m4_ref(DB_ENV-__GT__set_isalive, DbEnv, set_isalive, env_set_isalive),
$1, dbenv_set_lg_bsize, _m4_ref(DB_ENV-__GT__set_lg_bsize, DbEnv, set_lg_bsize, env_set_lg_bsize),
$1, dbenv_set_lg_dir, _m4_ref(DB_ENV-__GT__set_lg_dir, DbEnv, set_lg_dir, env_set_lg_dir),
$1, dbenv_set_lg_filemode, _m4_ref(DB_ENV-__GT__set_lg_filemode, DbEnv, set_lg_filemode, env_set_lg_mode),
$1, dbenv_set_lg_max, _m4_ref(DB_ENV-__GT__set_lg_max, DbEnv, set_lg_max, env_set_lg_max),
$1, dbenv_set_lg_regionmax, _m4_ref(DB_ENV-__GT__set_lg_regionmax, DbEnv, set_lg_regionmax, env_set_lg_regionmax),
$1, dbenv_set_lk_conflicts, _m4_ref(DB_ENV-__GT__set_lk_conflicts, DbEnv, set_lk_conflicts, env_set_lk_conflicts),
$1, dbenv_set_lk_detect, _m4_ref(DB_ENV-__GT__set_lk_detect, DbEnv, set_lk_detect, env_set_lk_detect),
$1, dbenv_set_lk_max_lockers, _m4_ref(DB_ENV-__GT__set_lk_max_lockers, DbEnv, set_lk_max_lockers, env_set_lk_max_lockers),
$1, dbenv_set_lk_max_locks, _m4_ref(DB_ENV-__GT__set_lk_max_locks, DbEnv, set_lk_max_locks, env_set_lk_max_locks),
$1, dbenv_set_lk_max_objects, _m4_ref(DB_ENV-__GT__set_lk_max_objects, DbEnv, set_lk_max_objects, env_set_lk_max_objects),
$1, dbenv_set_lk_partitions, _m4_ref(DB_ENV-__GT__set_lk_partitions, DbEnv, set_lk_partitions, env_set_lk_partitions),
$1, dbenv_set_message_stream, _m4_ref(NOAPI, DbEnv, set_message_stream, env_set_msg_stream),
$1, dbenv_set_mp_mmapsize, _m4_ref(DB_ENV-__GT__set_mp_mmapsize, DbEnv, set_mp_mmapsize, env_set_mp_mmapsize),
$1, dbenv_set_msgcall, _m4_ref(DB_ENV-__GT__set_msgcall, DbEnv, set_msgcall, env_set_msgcall),
$1, dbenv_set_msgfile, _m4_ref(DB_ENV-__GT__set_msgfile, DbEnv, set_msgfile, env_set_msgfile),
$1, dbenv_set_rpc_server, _m4_ref(DB_ENV-__GT__set_rpc_server, DbEnv, set_rpc_server, env_set_rpc_server),
$1, dbenv_set_shm_key, _m4_ref(DB_ENV-__GT__set_shm_key, DbEnv, set_shm_key, env_set_shm_key),
$1, dbenv_set_thread_count, _m4_ref(DB_ENV-__GT__set_thread_count, DbEnv, set_thread_count, env_set_thread_count),
$1, dbenv_set_thread_id, _m4_ref(DB_ENV-__GT__set_thread_id, DbEnv, set_thread_id, env_set_thread_id),
$1, dbenv_set_thread_id_string, _m4_ref(DB_ENV-__GT__set_thread_id_string, DbEnv, set_thread_id_string, env_set_thread_id_string),
$1, dbenv_set_timeout, _m4_ref(DB_ENV-__GT__set_timeout, DbEnv, set_timeout, env_set_timeout),
$1, dbenv_set_tmp_dir, _m4_ref(DB_ENV-__GT__set_tmp_dir, DbEnv, set_tmp_dir, env_set_tmp_dir),
$1, dbenv_set_tx_max, _m4_ref(DB_ENV-__GT__set_tx_max, DbEnv, set_tx_max, env_set_tx_max),
$1, dbenv_set_tx_timestamp, _m4_ref(DB_ENV-__GT__set_tx_timestamp, DbEnv, set_tx_timestamp, env_set_tx_timestamp),
$1, dbenv_set_verbose, _m4_ref(DB_ENV-__GT__set_verbose, DbEnv, set_verbose, env_set_verbose),
$1, dbenv_stat_print, _m4_ref(DB_ENV-__GT__stat_print, DbEnv, stat_print, env_stat),
$1, dbenv_strerror, _m4_ref(db_strerror, DbEnv, strerror, env_strerror),
$1, dbenv_version, _m4_ref(db_version, DbEnv, version, env_version),
dnl #################################################################
dnl Db
dnl #################################################################
$1, Db, _m4_class(DB, Db, db_class),
$1, dbh_associate, _m4_ref(DB-__GT__associate, Db, associate, db_associate),
$1, dbh_close, _m4_ref(DB-__GT__close, Db, close, db_close),
$1, dbh_compact, _m4_ref(DB-__GT__compact, Db, compact, db_compact),
$1, dbh_create, _m4_ref(db_create, NOAPI, NOAPI, db_class),
$1, dbh_del, _m4_ref(DB-__GT__del, Db, del, db_del),
$1, dbh_err, _m4_ref(DB-__GT__err, Db, err, db_err),
$1, dbh_errx, _m4_ref(DB-__GT__errx, Db, errx, db_err),
$1, dbh_exists, _m4_ref(DB-__GT__exists, Db, exists, db_exists),
$1, dbh_fd, _m4_ref(DB-__GT__fd, Db, fd, db_fd),
$1, dbh_get, _m4_ref(DB-__GT__get, Db, get, db_get),
$1, dbh_get_bt_minkey, _m4_ref(DB-__GT__get_bt_minkey, Db, get_bt_minkey, db_set_bt_minkey),
$1, dbh_get_byteswapped, _m4_ref(DB-__GT__get_byteswapped, Db, get_byteswapped, db_get_byteswapped),
$1, dbh_get_cachesize, _m4_ref(DB-__GT__get_cachesize, Db, get_cachesize, db_set_cachesize),
$1, dbh_get_dbname, _m4_ref(DB-__GT__get_dbname, Db, get_dbname, db_open),
$1, dbh_get_encrypt_flags, _m4_ref(DB-__GT__get_encrypt_flags, Db, get_encrypt_flags, db_set_encrypt),
$1, dbh_get_errfile, _m4_ref(DB-__GT__get_errfile, Db, get_errfile, db_set_errfile),
$1, dbh_get_errpfx, _m4_ref(DB-__GT__get_errpfx, Db, get_errpfx, db_set_errpfx),
$1, dbh_get_file, _m4_ref(DB-__GT__get_file, Db, get_file, db_open),
$1, dbh_get_flags, _m4_ref(DB-__GT__get_flags, Db, get_flags, db_set_flags),
$1, dbh_get_h_ffactor, _m4_ref(DB-__GT__get_h_ffactor, Db, get_h_ffactor, db_set_h_ffactor),
$1, dbh_get_h_nelem, _m4_ref(DB-__GT__get_h_nelem, Db, get_h_nelem, db_set_h_nelem),
$1, dbh_get_lorder, _m4_ref(DB-__GT__get_lorder, Db, get_lorder, db_set_lorder),
$1, dbh_get_mpf, _m4_ref(DB-__GT__get_mpf, Db, get_mpf, db_get_mpf),
$1, dbh_get_msgfile, _m4_ref(DB-__GT__get_msgfile, Db, get_msgfile, db_get_msgfile),
$1, dbh_get_multiple, _m4_ref(DB-__GT__get_multiple, Db, get_multiple, db_open),
$1, dbh_get_open_flags, _m4_ref(DB-__GT__get_open_flags, Db, get_open_flags, db_set_open_flags),
$1, dbh_get_pagesize, _m4_ref(DB-__GT__get_pagesize, Db, get_pagesize, db_set_pagesize),
$1, dbh_get_priority, _m4_ref(DB-__GT__get_priority, Db, get_priority, db_set_priority),
$1, dbh_get_q_extentsize, _m4_ref(DB-__GT__get_q_extentsize, Db, get_q_extentsize, db_set_q_extentsize),
$1, dbh_get_re_delim, _m4_ref(DB-__GT__get_re_delim, Db, get_re_delim, db_set_re_delim),
$1, dbh_get_re_len, _m4_ref(DB-__GT__get_re_len, Db, get_re_len, db_set_re_len),
$1, dbh_get_re_pad, _m4_ref(DB-__GT__get_re_pad, Db, get_re_pad, db_set_re_pad),
$1, dbh_get_re_source, _m4_ref(DB-__GT__get_re_source, Db, get_re_source, db_set_re_source),
$1, dbh_get_transactional, _m4_ref(DB-__GT__get_transactional, Db, get_transactional, db_open),
$1, dbh_get_type, _m4_ref(DB-__GT__get_type, Db, get_type, db_get_type),
$1, dbh_getenv, _m4_ref(DB-__GT__get_env, Db, getenv, db_getenv),
$1, dbh_is_encrypted, _m4_ref(NOAPI, Db, is_encrypted, db_set_encrypt),
$1, dbh_join, _m4_ref(DB-__GT__join, Db, join, db_join),
$1, dbh_key_range, _m4_ref(DB-__GT__key_range, Db, key_range, db_key_range),
$1, dbh_open, _m4_ref(DB-__GT__open, Db, open, db_open),
$1, dbh_pget, _m4_ref(DB-__GT__pget, Db, pget, db_get),
$1, dbh_put, _m4_ref(DB-__GT__put, Db, put, db_put),
$1, dbh_remove, _m4_ref(DB-__GT__remove, Db, remove, db_remove),
$1, dbh_rename, _m4_ref(DB-__GT__rename, Db, rename, db_rename),
$1, dbh_set_alloc, _m4_ref(DB-__GT__set_alloc, Db, set_alloc, db_set_alloc),
$1, dbh_set_append_recno, _m4_ref(DB-__GT__set_append_recno, Db, set_append_recno, db_set_append_recno),
$1, dbh_set_bt_compare, _m4_ref(DB-__GT__set_bt_compare, Db, set_bt_compare, db_set_bt_compare),
$1, dbh_set_bt_minkey, _m4_ref(DB-__GT__set_bt_minkey, Db, set_bt_minkey, db_set_bt_minkey),
$1, dbh_set_bt_prefix, _m4_ref(DB-__GT__set_bt_prefix, Db, set_bt_prefix, db_set_bt_prefix),
$1, dbh_set_cachesize, _m4_ref(DB-__GT__set_cachesize, Db, set_cachesize, db_set_cachesize),
$1, dbh_set_dup_compare, _m4_ref(DB-__GT__set_dup_compare, Db, set_dup_compare, db_set_dup_compare),
$1, dbh_set_encrypt, _m4_ref(DB-__GT__set_encrypt, Db, set_encrypt, db_set_encrypt),
$1, dbh_set_errcall, _m4_ref(DB-__GT__set_errcall, Db, set_errcall, db_set_errcall),
$1, dbh_set_errfile, _m4_ref(DB-__GT__set_errfile, Db, set_errfile, db_set_errfile),
$1, dbh_set_error_stream, _m4_ref(NOAPI, Db, set_error_stream, db_set_error_stream),
$1, dbh_set_errpfx, _m4_ref(DB-__GT__set_errpfx, Db, set_errpfx, db_set_errpfx),
$1, dbh_set_feedback, _m4_ref(DB-__GT__set_feedback, Db, set_feedback, db_set_feedback),
$1, dbh_set_flags, _m4_ref(DB-__GT__set_flags, Db, set_flags, db_set_flags),
$1, dbh_set_h_compare, _m4_ref(DB-__GT__set_h_compare, Db, set_h_compare, db_set_h_compare),
$1, dbh_set_h_ffactor, _m4_ref(DB-__GT__set_h_ffactor, Db, set_h_ffactor, db_set_h_ffactor),
$1, dbh_set_h_hash, _m4_ref(DB-__GT__set_h_hash, Db, set_h_hash, db_set_h_hash),
$1, dbh_set_h_nelem, _m4_ref(DB-__GT__set_h_nelem, Db, set_h_nelem, db_set_h_nelem),
$1, dbh_set_lorder, _m4_ref(DB-__GT__set_lorder, Db, set_lorder, db_set_lorder),
$1, dbh_set_message_stream, _m4_ref(NOAPI, Db, set_message_stream, db_set_msg_stream),
$1, dbh_set_msgcall, _m4_ref(DB-__GT__set_msgcall, Db, set_msgcall, db_set_msgcall),
$1, dbh_set_msgfile, _m4_ref(DB-__GT__set_msgfile, Db, set_msgfile, db_set_msgfile),
$1, dbh_set_pagesize, _m4_ref(DB-__GT__set_pagesize, Db, set_pagesize, db_set_pagesize),
$1, dbh_set_priority, _m4_ref(DB-__GT__set_priority, Db, set_priority, db_set_priority),
$1, dbh_set_q_extentsize, _m4_ref(DB-__GT__set_q_extentsize, Db, set_q_extentsize, db_set_q_extentsize),
$1, dbh_set_re_delim, _m4_ref(DB-__GT__set_re_delim, Db, set_re_delim, db_set_re_delim),
$1, dbh_set_re_len, _m4_ref(DB-__GT__set_re_len, Db, set_re_len, db_set_re_len),
$1, dbh_set_re_pad, _m4_ref(DB-__GT__set_re_pad, Db, set_re_pad, db_set_re_pad),
$1, dbh_set_re_source, _m4_ref(DB-__GT__set_re_source, Db, set_re_source, db_set_re_source),
$1, dbh_stat, _m4_ref(DB-__GT__stat, Db, stat, db_stat),
$1, dbh_stat_print, _m4_ref(DB-__GT__stat_print, Db, stat_print, db_stat),
$1, dbh_sync, _m4_ref(DB-__GT__sync, Db, sync, db_sync),
$1, dbh_truncate, _m4_ref(DB-__GT__truncate, Db, truncate, db_truncate),
$1, dbh_upgrade, _m4_ref(DB-__GT__upgrade, Db, upgrade, db_upgrade),
$1, dbh_verify, _m4_ref(DB-__GT__verify, Db, verify, db_verify),
dnl #################################################################
dnl Dbc.
dnl #################################################################
$1, Dbc, _m4_class(DBC, Dbc, dbc_class),
$1, dbh_cursor, _m4_ref(DB-__GT__cursor, Db, cursor, db_cursor),
$1, dbc_close, _m4_ref(DBcursor-__GT__close, Dbc, close, dbc_close),
$1, dbc_count, _m4_ref(DBcursor-__GT__count, Dbc, count, dbc_count),
$1, dbc_del, _m4_ref(DBcursor-__GT__del, Dbc, del, dbc_del),
$1, dbc_dup, _m4_ref(DBcursor-__GT__dup, Dbc, dup, dbc_dup),
$1, dbc_get, _m4_ref(DBcursor-__GT__get, Dbc, get, dbc_get),
$1, dbc_get_priority, _m4_ref(DBcursor-__GT__get_priority, Dbc, get_priority, dbc_set_priority),
$1, dbc_pget, _m4_ref(DBcursor-__GT__pget, Dbc, pget, dbc_get),
$1, dbc_put, _m4_ref(DBcursor-__GT__put, Dbc, put, dbc_put),
$1, dbc_set_priority, _m4_ref(DBcursor-__GT__set_priority, Dbc, set_priority, dbc_set_priority),
dnl #################################################################
dnl Exception classes.
dnl #################################################################
$1, DbDeadlockException, _m4_class(NOAPI, DbDeadlockException, deadlock_class),
$1, DbException, _m4_class(NOAPI, DbException, except_class),
$1, DbLockNotGrantedException, _m4_class(NOAPI, DbLockNotGrantedException, lockng_class),
$1, DbMemoryException, _m4_class(NOAPI, DbMemoryException, memp_class),
$1, DbRunRecoveryException, _m4_class(NOAPI, DbRunRecoveryException, runrec_class),
$1, except_get_errno, _m4_ref(NOAPI, DbException, get_errno, except_class),
$1, except_what, _m4_ref(NOAPI, DbException, what, except_class),
$1, except_get_env, _m4_ref(NOAPI, DbException, get_env, except_class),
dnl #################################################################
dnl Locking.
dnl #################################################################
$1, DbLock, _m4_class(DB_LOCK, DbLock, lock_class),
$1, DbLockRequest, DB_LOCKREQ,
$1, lock_detect, _m4_ref(DB_ENV-__GT__lock_detect, DbEnv, lock_detect, lock_detect),
$1, lock_get, _m4_ref(DB_ENV-__GT__lock_get, DbEnv, lock_get, lock_get),
$1, lock_id, _m4_ref(DB_ENV-__GT__lock_id, DbEnv, lock_id, lock_id),
$1, lock_id_free, _m4_ref(DB_ENV-__GT__lock_id_free, DbEnv, lock_id_free, lock_id_free),
$1, lock_put, _m4_ref(DB_ENV-__GT__lock_put, DbEnv, lock_put, lock_put),
$1, lock_stat, _m4_ref(DB_ENV-__GT__lock_stat, DbEnv, lock_stat, lock_stat),
$1, lock_stat_print, _m4_ref(DB_ENV-__GT__lock_stat_print, DbEnv, lock_stat_print, lock_stat),
$1, lock_vec, _m4_ref(DB_ENV-__GT__lock_vec, DbEnv, lock_vec, lock_vec),
$1, cdsgroup_begin, _m4_ref(DB_ENV-__GT__cdsgroup_begin, DbEnv, cdsgroup_begin, env_cdsgroup_begin),
dnl #################################################################
dnl Logging.
dnl #################################################################
$1, DbLogc, _m4_class(DB_LOGC, DbLogc, logc_class),
$1, DbLsn, _m4_class(DB_LSN, DbLsn, lsn_class),
$1, log_archive, _m4_ref(DB_ENV-__GT__log_archive, DbEnv, log_archive, log_archive),
$1, log_compare, _m4_ref(log_compare, DbEnv, log_compare, log_compare),
$1, log_cursor, _m4_ref(DB_ENV-__GT__log_cursor, DbEnv, log_cursor, log_cursor),
$1, log_file, _m4_ref(DB_ENV-__GT__log_file, DbEnv, log_file, log_file),
$1, log_flush, _m4_ref(DB_ENV-__GT__log_flush, DbEnv, log_flush, log_flush),
$1, log_printf, _m4_ref(DB_ENV-__GT__log_printf, DbEnv, log_printf, log_printf),
$1, log_put, _m4_ref(DB_ENV-__GT__log_put, DbEnv, log_put, log_put),
$1, log_stat, _m4_ref(DB_ENV-__GT__log_stat, DbEnv, log_stat, log_stat),
$1, log_stat_print, _m4_ref(DB_ENV-__GT__log_stat_print, DbEnv, log_stat_print, log_stat),
$1, logc_close, _m4_ref(DB_LOGC-__GT__close, DbLogc, close, logc_close),
$1, logc_get, _m4_ref(DB_LOGC-__GT__get, DbLogc, get, logc_get),
dnl #################################################################
dnl Memory Pool.
dnl #################################################################
$1, DbMpoolFile, _m4_class(DB_MPOOLFILE, DbMpoolFile, mempfile_class),
$1, memp_fclose, _m4_ref(DB_MPOOLFILE-__GT__close, DbMpoolFile, close, memp_fclose),
$1, memp_fcreate, _m4_ref(DB_ENV-__GT__memp_fcreate, DbEnv, memp_fcreate, memp_fcreate),
$1, memp_fget, _m4_ref(DB_MPOOLFILE-__GT__get, DbMpoolFile, get, memp_fget),
$1, memp_fopen, _m4_ref(DB_MPOOLFILE-__GT__open, DbMpoolFile, open, memp_fopen),
$1, memp_fput, _m4_ref(DB_MPOOLFILE-__GT__put, DbMpoolFile, put, memp_fput),
$1, memp_fstat, _m4_ref(NOAPI, DbEnv, memp_fstat, memp_stat),
$1, memp_fsync, _m4_ref(DB_MPOOLFILE-__GT__sync, DbMpoolFile, sync, memp_fsync),
$1, memp_get_clear_len, _m4_ref(DB_MPOOLFILE-__GT__get_clear_len, DbMpoolFile, get_clear_len, memp_set_clear_len),
$1, memp_get_fileid, _m4_ref(DB_MPOOLFILE-__GT__get_fileid, DbMpoolFile, get_fileid, memp_set_fileid),
$1, memp_get_flags, _m4_ref(DB_MPOOLFILE-__GT__get_flags, DbMpoolFile, get_flags, memp_set_flags),
$1, memp_get_ftype, _m4_ref(DB_MPOOLFILE-__GT__get_ftype, DbMpoolFile, get_ftype, memp_set_ftype),
$1, memp_get_lsn_offset, _m4_ref(DB_MPOOLFILE-__GT__get_lsn_offset, DbMpoolFile, get_lsn_offset, memp_set_lsn_offset),
$1, memp_get_max_openfd, _m4_ref(DB_ENV-__GT__get_mp_max_openfd, DbEnv, get_mp_max_openfd, memp_openfd),
$1, memp_get_max_write, _m4_ref(DB_ENV-__GT__get_mp_max_write, DbEnv, get_mp_max_write, memp_maxwrite),
$1, memp_get_maxsize, _m4_ref(DB_MPOOLFILE-__GT__get_maxsize, DbMpoolFile, get_maxsize, memp_set_maxsize),
$1, memp_get_pgcookie, _m4_ref(DB_MPOOLFILE-__GT__get_pgcookie, DbMpoolFile, get_pgcookie, memp_set_pgcookie),
$1, memp_get_priority, _m4_ref(DB_MPOOLFILE-__GT__get_priority, DbMpoolFile, get_priority, memp_set_priority),
$1, memp_register, _m4_ref(DB_ENV-__GT__memp_register, DbEnv, memp_register, memp_register),
$1, memp_set_clear_len, _m4_ref(DB_MPOOLFILE-__GT__set_clear_len, DbMpoolFile, set_clear_len, memp_set_clear_len),
$1, memp_set_fileid, _m4_ref(DB_MPOOLFILE-__GT__set_fileid, DbMpoolFile, set_fileid, memp_set_fileid),
$1, memp_set_flags, _m4_ref(DB_MPOOLFILE-__GT__set_flags, DbMpoolFile, set_flags, memp_set_flags),
$1, memp_set_ftype, _m4_ref(DB_MPOOLFILE-__GT__set_ftype, DbMpoolFile, set_ftype, memp_set_ftype),
$1, memp_set_lsn_offset, _m4_ref(DB_MPOOLFILE-__GT__set_lsn_offset, DbMpoolFile, set_lsn_offset, memp_set_lsn_offset),
$1, memp_set_max_openfd, _m4_ref(DB_ENV-__GT__set_mp_max_openfd, DbEnv, set_mp_max_openfd, memp_openfd),
$1, memp_set_max_write, _m4_ref(DB_ENV-__GT__set_mp_max_write, DbEnv, set_mp_max_write, memp_maxwrite),
$1, memp_set_maxsize, _m4_ref(DB_MPOOLFILE-__GT__set_maxsize, DbMpoolFile, set_maxsize, memp_set_maxsize),
$1, memp_set_pgcookie, _m4_ref(DB_MPOOLFILE-__GT__set_pgcookie, DbMpoolFile, set_pgcookie, memp_set_pgcookie),
$1, memp_set_priority, _m4_ref(DB_MPOOLFILE-__GT__set_priority, DbMpoolFile, set_priority, memp_set_priority),
$1, memp_stat, _m4_ref(DB_ENV-__GT__memp_stat, DbEnv, memp_stat, memp_stat),
$1, memp_stat_print, _m4_ref(DB_ENV-__GT__memp_stat_print, DbEnv, memp_stat_print, memp_stat),
$1, memp_sync, _m4_ref(DB_ENV-__GT__memp_sync, DbEnv, memp_sync, memp_sync),
$1, memp_trickle, _m4_ref(DB_ENV-__GT__memp_trickle, DbEnv, memp_trickle, memp_trickle),
dnl #################################################################
dnl Mutex.
dnl #################################################################
$1, mutex_alloc, _m4_ref(DB_ENV-__GT__mutex_alloc, DbEnv, mutex_alloc, mutex_alloc),
$1, mutex_free, _m4_ref(DB_ENV-__GT__mutex_free, DbEnv, mutex_free, mutex_free),
$1, mutex_get_align, _m4_ref(DB_ENV-__GT__mutex_get_align, DbEnv, mutex_get_align, mutex_set_align),
$1, mutex_get_increment, _m4_ref(DB_ENV-__GT__mutex_get_increment, DbEnv, mutex_get_increment, mutex_set_max),
$1, mutex_get_max, _m4_ref(DB_ENV-__GT__mutex_get_max, DbEnv, mutex_get_max, mutex_set_max),
$1, mutex_get_tas_spins, _m4_ref(DB_ENV-__GT__mutex_get_tas_spins, DbEnv, mutex_get_tas_spins, mutex_set_tas_spins),
$1, mutex_lock, _m4_ref(DB_ENV-__GT__mutex_lock, DbEnv, mutex_lock, mutex_lock),
$1, mutex_set_align, _m4_ref(DB_ENV-__GT__mutex_set_align, DbEnv, mutex_set_align, mutex_set_align),
$1, mutex_set_increment, _m4_ref(DB_ENV-__GT__mutex_set_increment, DbEnv, mutex_set_increment, mutex_set_max),
$1, mutex_set_max, _m4_ref(DB_ENV-__GT__mutex_set_max, DbEnv, mutex_set_max, mutex_set_max),
$1, mutex_set_tas_spins, _m4_ref(DB_ENV-__GT__mutex_set_tas_spins, DbEnv, mutex_set_tas_spins, mutex_set_tas_spins),
$1, mutex_stat, _m4_ref(DB_ENV-__GT__mutex_stat, DbEnv, mutex_stat, mutex_stat),
$1, mutex_stat_print, _m4_ref(DB_ENV-__GT__mutex_stat_print, DbEnv, mutex_stat_print, mutex_stat),
$1, mutex_unlock, _m4_ref(DB_ENV-__GT__mutex_unlock, DbEnv, mutex_unlock, mutex_unlock),
dnl #################################################################
dnl Replication.
dnl #################################################################
$1, rep_elect, _m4_ref(DB_ENV-__GT__rep_elect, DbEnv, rep_elect, rep_elect),
$1, rep_get_config, _m4_ref(DB_ENV-__GT__rep_get_config, DbEnv, rep_get_config, rep_get_config),
$1, rep_get_clockskew, _m4_ref(DB_ENV-__GT__rep_get_clockskew, DbEnv, rep_get_clockskew, rep_clockskew),
$1, rep_get_limit, _m4_ref(DB_ENV-__GT__rep_get_limit, DbEnv, rep_get_limit, rep_limit),
$1, rep_get_nsites, _m4_ref(DB_ENV-__GT__rep_get_nsites, DbEnv, rep_get_nsites, rep_nsites),
$1, rep_get_priority, _m4_ref(DB_ENV-__GT__rep_get_priority, DbEnv, rep_get_priority, rep_priority),
$1, rep_get_request, _m4_ref(DB_ENV-__GT__rep_get_request, DbEnv, rep_get_request, rep_request),
$1, rep_get_timeout, _m4_ref(DB_ENV-__GT__rep_get_timeout, DbEnv, rep_get_timeout, rep_timeout),
$1, rep_message, _m4_ref(DB_ENV-__GT__rep_process_message, DbEnv, rep_process_message, rep_message),
$1, rep_set_config, _m4_ref(DB_ENV-__GT__rep_set_config, DbEnv, rep_set_config, rep_config),
$1, rep_set_clockskew, _m4_ref(DB_ENV-__GT__rep_set_clockskew, DbEnv, rep_set_clockskew, rep_clockskew),
$1, rep_set_limit, _m4_ref(DB_ENV-__GT__rep_set_limit, DbEnv, rep_set_limit, rep_limit),
$1, rep_set_nsites, _m4_ref(DB_ENV-__GT__rep_set_nsites, DbEnv, rep_set_nsites, rep_nsites),
$1, rep_set_priority, _m4_ref(DB_ENV-__GT__rep_set_priority, DbEnv, rep_set_priority, rep_priority),
$1, rep_set_request, _m4_ref(DB_ENV-__GT__rep_set_request, DbEnv, rep_set_request, rep_request),
$1, rep_set_timeout, _m4_ref(DB_ENV-__GT__rep_set_timeout, DbEnv, rep_set_timeout, rep_timeout),
$1, rep_set_transport, _m4_ref(DB_ENV-__GT__rep_set_transport, DbEnv, rep_set_transport, rep_transport),
$1, rep_start, _m4_ref(DB_ENV-__GT__rep_start, DbEnv, rep_start, rep_start),
$1, rep_stat, _m4_ref(DB_ENV-__GT__rep_stat, DbEnv, rep_stat, rep_stat),
$1, rep_stat_print, _m4_ref(DB_ENV-__GT__rep_stat_print, DbEnv, rep_stat_print, rep_stat),
$1, rep_sync, _m4_ref(DB_ENV-__GT__rep_sync, DbEnv, rep_sync, rep_sync),
$1, repmgr_add_remote_site, _m4_ref(DB_ENV-__GT__repmgr_add_remote_site, DbEnv, repmgr_add_remote_site, repmgr_remote_site),
$1, repmgr_get_ack_policy, _m4_ref(DB_ENV-__GT__repmgr_get_ack_policy, DbEnv, repmgr_get_ack_policy, repmgr_ack_policy),
$1, repmgr_set_ack_policy, _m4_ref(DB_ENV-__GT__repmgr_set_ack_policy, DbEnv, repmgr_set_ack_policy, repmgr_ack_policy),
$1, repmgr_set_local_site, _m4_ref(DB_ENV-__GT__repmgr_set_local_site, DbEnv, repmgr_set_local_site, repmgr_local_site),
$1, repmgr_site_list, _m4_ref(DB_ENV-__GT__repmgr_site_list, DbEnv, repmgr_site_list, repmgr_site_list),
$1, repmgr_start, _m4_ref(DB_ENV-__GT__repmgr_start, DbEnv, repmgr_start, repmgr_start),
$1, repmgr_stat, _m4_ref(DB_ENV-__GT__repmgr_stat, DbEnv, repmgr_stat, repmgr_stat),
$1, repmgr_stat_print, _m4_ref(DB_ENV-__GT__repmgr_stat_print, DbEnv, repmgr_stat_print, repmgr_stat),
dnl #################################################################
dnl Sequences.
dnl #################################################################
$1, DbSequence, _m4_class(DB_SEQUENCE, DbSequence, seq_class),
$1, seq_close, _m4_ref(DB_SEQUENCE-__GT__close, DbSequence, close, seq_close),
$1, seq_create, _m4_ref(db_sequence_create, NOAPI, NOAPI, seq_class),
$1, seq_get, _m4_ref(DB_SEQUENCE-__GT__get, DbSequence, get, seq_get),
$1, seq_get_cachesize, _m4_ref(DB_SEQUENCE-__GT__get_cachesize, DbSequence, get_cachesize, seq_set_cachesize),
$1, seq_get_dbp, _m4_ref(DB_SEQUENCE-__GT__get_dbp, DbSequence, get_dbp, seq_open),
$1, seq_get_flags, _m4_ref(DB_SEQUENCE-__GT__get_flags, DbSequence, get_flags, seq_set_flags),
$1, seq_get_key, _m4_ref(DB_SEQUENCE-__GT__get_key, DbSequence, get_key, seq_open),
$1, seq_get_range, _m4_ref(DB_SEQUENCE-__GT__get_range, DbSequence, get_range, seq_set_range),
$1, seq_initial_value, _m4_ref(DB_SEQUENCE-__GT__initial_value, DbSequence, initial_value, seq_initial_value),
$1, seq_open, _m4_ref(DB_SEQUENCE-__GT__open, DbSequence, open, seq_open),
$1, seq_remove, _m4_ref(DB_SEQUENCE-__GT__remove, DbSequence, remove, seq_remove),
$1, seq_set_cachesize, _m4_ref(DB_SEQUENCE-__GT__set_cachesize, DbSequence, set_cachesize, seq_set_cachesize),
$1, seq_set_flags, _m4_ref(DB_SEQUENCE-__GT__set_flags, DbSequence, set_flags, seq_set_flags),
$1, seq_set_range, _m4_ref(DB_SEQUENCE-__GT__set_range, DbSequence, set_range, seq_set_range),
$1, seq_stat, _m4_ref(DB_SEQUENCE-__GT__stat, DbSequence, stat, seq_stat),
$1, seq_stat_print, _m4_ref(DB_SEQUENCE-__GT__stat_print, DbSequence, stat_print, seq_stat),
dnl #################################################################
dnl Transactions.
dnl #################################################################
$1, DbTxn, _m4_class(DB_TXN, DbTxn, txn_class),
$1, txn_abort, _m4_ref(DB_TXN-__GT__abort, DbTxn, abort, txn_abort),
$1, txn_begin, _m4_ref(DB_ENV-__GT__txn_begin, DbEnv, txn_begin, txn_begin),
$1, txn_checkpoint, _m4_ref(DB_ENV-__GT__txn_checkpoint, DbEnv, txn_checkpoint, txn_checkpoint),
$1, txn_commit, _m4_ref(DB_TXN-__GT__commit, DbTxn, commit, txn_commit),
$1, txn_discard, _m4_ref(DB_TXN-__GT__discard, DbTxn, discard, txn_discard),
$1, txn_get_name, _m4_ref(DB_TXN-__GT__get_name, DbTxn, get_name, txn_get_name),
$1, txn_id, _m4_ref(DB_TXN-__GT__id, DbTxn, id, txn_id),
$1, txn_prepare, _m4_ref(DB_TXN-__GT__prepare, DbTxn, prepare, txn_prepare),
$1, txn_recover, _m4_ref(DB_ENV-__GT__txn_recover, DbEnv, txn_recover, txn_recover),
$1, txn_set_name, _m4_ref(DB_TXN-__GT__set_name, DbTxn, set_name, txn_set_name),
$1, txn_set_timeout, _m4_ref(DB_TXN-__GT__set_timeout, DbTxn, set_timeout, txn_set_timeout),
$1, txn_stat, _m4_ref(DB_ENV-__GT__txn_stat, DbEnv, txn_stat, txn_stat),
$1, txn_stat_print, _m4_ref(DB_ENV-__GT__txn_stat_print, DbEnv, txn_stat_print, txn_stat),
dnl #################################################################
dnl Dbt
dnl #################################################################
$1, DbMultipleDataIterator, _m4_class(NOAPI, DbMultipleDataIterator, dbt_bulk_class),
$1, DbMultipleIterator, _m4_class(NOAPI, DbMultipleIterator, dbt_bulk_class),
$1, DbMultipleKeyDataIterator, _m4_class(NOAPI, DbMultipleKeyDataIterator, dbt_bulk_class),
$1, DbMultipleRecnoDataIterator, _m4_class(NOAPI, DbMultipleRecnoDataIterator, dbt_bulk_class),
$1, Dbt, _m4_class(DBT, Dbt, dbt_class),
$1, dbt_get_data, _m4_ref(NOAPI, Dbt, get_data, dbt_class),
$1, dbt_get_dlen, _m4_ref(NOAPI, Dbt, get_dlen, dbt_class),
$1, dbt_get_doff, _m4_ref(NOAPI, Dbt, get_doff, dbt_class),
$1, dbt_get_flags, _m4_ref(NOAPI, Dbt, get_flags, dbt_class),
$1, dbt_get_offset, _m4_ref(NOAPI, Dbt, get_offset, dbt_class),
$1, dbt_get_recno_key_data, _m4_ref(NOAPI, Dbt, get_recno_key_data, dbt_class),
$1, dbt_get_size, _m4_ref(NOAPI, Dbt, get_size, dbt_class),
$1, dbt_get_ulen, _m4_ref(NOAPI, Dbt, get_ulen, dbt_class),
$1, dbt_set_data, _m4_ref(NOAPI, Dbt, set_data, dbt_class),
$1, dbt_set_dlen, _m4_ref(NOAPI, Dbt, set_dlen, dbt_class),
$1, dbt_set_doff, _m4_ref(NOAPI, Dbt, set_doff, dbt_class),
$1, dbt_set_flags, _m4_ref(NOAPI, Dbt, set_flags, dbt_class),
$1, dbt_set_offset, _m4_ref(NOAPI, Dbt, set_offset, dbt_class),
$1, dbt_set_recno_key_data, _m4_ref(NOAPI, Dbt, set_recno_key_data, dbt_class),
$1, dbt_set_size, _m4_ref(NOAPI, Dbt, set_size, dbt_class),
$1, dbt_set_ulen, _m4_ref(NOAPI, Dbt, set_ulen, dbt_class),
dnl #################################################################
dnl Configuration
dnl #################################################################
$1, dbenv_set_func_close, _m4_ref(db_env_set_func_close, NOAPI, NOAPI, set_func_close),
$1, dbenv_set_func_dirfree, _m4_ref(db_env_set_func_dirfree, NOAPI, NOAPI, set_func_dirfree),
$1, dbenv_set_func_dirlist, _m4_ref(db_env_set_func_dirlist, NOAPI, NOAPI, set_func_dirlist),
$1, dbenv_set_func_exists, _m4_ref(db_env_set_func_exists, NOAPI, NOAPI, set_func_exists),
$1, dbenv_set_func_free, _m4_ref(db_env_set_func_free, NOAPI, NOAPI, set_func_free),
$1, dbenv_set_func_fsync, _m4_ref(db_env_set_func_fsync, NOAPI, NOAPI, set_func_fsync),
$1, dbenv_set_func_ftruncate, _m4_ref(db_env_set_func_ftruncate, NOAPI, NOAPI, set_func_ftruncate),
$1, dbenv_set_func_ioinfo, _m4_ref(db_env_set_func_ioinfo, NOAPI, NOAPI, set_func_ioinfo),
$1, dbenv_set_func_malloc, _m4_ref(db_env_set_func_malloc, NOAPI, NOAPI, set_func_malloc),
$1, dbenv_set_func_file_map, _m4_ref(db_env_set_func_file_map, NOAPI, NOAPI, set_func_file_map),
$1, dbenv_set_func_region_map, _m4_ref(db_env_set_func_region_map, NOAPI, NOAPI, set_func_region_map),
$1, dbenv_set_func_open, _m4_ref(db_env_set_func_open, NOAPI, NOAPI, set_func_open),
$1, dbenv_set_func_pread, _m4_ref(db_env_set_func_pread, NOAPI, NOAPI, set_func_pread),
$1, dbenv_set_func_pwrite, _m4_ref(db_env_set_func_pwrite, NOAPI, NOAPI, set_func_pwrite),
$1, dbenv_set_func_read, _m4_ref(db_env_set_func_read, NOAPI, NOAPI, set_func_read),
$1, dbenv_set_func_realloc, _m4_ref(db_env_set_func_realloc, NOAPI, NOAPI, set_func_realloc),
$1, dbenv_set_func_rename, _m4_ref(db_env_set_func_rename, NOAPI, NOAPI, set_func_rename),
$1, dbenv_set_func_seek, _m4_ref(db_env_set_func_seek, NOAPI, NOAPI, set_func_seek),
$1, dbenv_set_func_unlink, _m4_ref(db_env_set_func_unlink, NOAPI, NOAPI, set_func_unlink),
$1, dbenv_set_func_write, _m4_ref(db_env_set_func_write, NOAPI, NOAPI, set_func_write),
$1, dbenv_set_func_yield, _m4_ref(db_env_set_func_yield, NOAPI, NOAPI, set_func_yield),
dnl #################################################################
dnl Utilities
dnl #################################################################
$1, berkeley_db_svc, m4_link(M4RELDIR/utility/berkeley_db_svc, berkeley_db_svc),
$1, db_archive, m4_link(M4RELDIR/utility/db_archive, db_archive),
$1, db_checkpoint, m4_link(M4RELDIR/utility/db_checkpoint, db_checkpoint),
$1, db_codegen, m4_link(M4RELDIR/utility/db_codegen, db_codegen),
$1, db_deadlock, m4_link(M4RELDIR/utility/db_deadlock, db_deadlock),
$1, db_dump, m4_link(M4RELDIR/utility/db_dump, db_dump),
$1, db_dump185, m4_link(M4RELDIR/utility/db_dump, db_dump185),
$1, db_hotbackup, m4_link(M4RELDIR/utility/db_hotbackup, db_hotbackup),
$1, db_load, m4_link(M4RELDIR/utility/db_load, db_load),
$1, db_printlog, m4_link(M4RELDIR/utility/db_printlog, db_printlog),
$1, db_recover, m4_link(M4RELDIR/utility/db_recover, db_recover),
$1, db_stat, m4_link(M4RELDIR/utility/db_stat, db_stat),
$1, db_upgrade, m4_link(M4RELDIR/utility/db_upgrade, db_upgrade),
$1, db_verify, m4_link(M4RELDIR/utility/db_verify, db_verify),
dnl #################################################################
dnl Dbm
dnl #################################################################
$1, dbm, _m4_ref(dbm, historic, NOAPI, dbm),
$1, dbm/ndbm, _m4_ref(dbm/ndbm, historic, NOAPI, dbm),
$1, dbm_clearerr, _m4_ref(dbm_close, historic, NOAPI, dbm),
$1, dbm_close, _m4_ref(dbm_close, historic, NOAPI, dbm),
$1, dbm_delete, _m4_ref(dbm_delete, historic, NOAPI, dbm),
$1, dbm_dirfno, _m4_ref(dbm_dirfno, historic, NOAPI, dbm),
$1, dbm_error, _m4_ref(dbm_close, historic, NOAPI, dbm),
$1, dbm_fetch, _m4_ref(dbm_fetch, historic, NOAPI, dbm),
$1, dbm_firstkey, _m4_ref(dbm_firstkey, historic, NOAPI, dbm),
$1, dbm_nextkey, _m4_ref(dbm_nextkey, historic, NOAPI, dbm),
$1, dbm_open, _m4_ref(dbm_open, historic, NOAPI, dbm),
$1, dbm_pagfno, _m4_ref(dbm_pagfno, historic, NOAPI, dbm),
$1, dbm_store, _m4_ref(dbm_store, historic, NOAPI, dbm),
$1, dbmclose, _m4_ref(dbmclose, historic, NOAPI, dbm),
$1, dbminit, _m4_ref(dbminit, historic, NOAPI, dbm),
$1, delete, _m4_ref(delete, historic, NOAPI, dbm),
$1, fetch, _m4_ref(fetch, historic, NOAPI, dbm),
$1, firstkey, _m4_ref(firstkey, historic, NOAPI, dbm),
$1, ndbm, _m4_ref(ndbm, historic, NOAPI, dbm),
$1, nextkey, _m4_ref(nextkey, historic, NOAPI, dbm),
$1, store, _m4_ref(store, historic, NOAPI, dbm),
dnl #################################################################
dnl Hsearch
dnl #################################################################
$1, hcreate, _m4_ref(hcreate, historic, NOAPI, hsearch),
$1, hsearch, _m4_ref(hsearch, historic, NOAPI, hsearch),
dnl #################################################################
dnl Flags, types, environment variables.
dnl #################################################################
$1, DB_AFTER, [_m4_nref($1, $1, dbc_put)],
$1, DB_AGGRESSIVE, [_m4_nref($1, $1, db_verify)],
$1, DB_APPEND, [_m4_nref($1, $1, db_put)],
$1, DB_ARCH_ABS, [_m4_nref($1, $1, log_archive)],
$1, DB_ARCH_DATA, [_m4_nref($1, $1, log_archive)],
$1, DB_ARCH_LOG, [_m4_nref($1, $1, log_archive)],
$1, DB_ARCH_REMOVE, [_m4_nref($1, $1, log_archive)],
$1, DB_AUTO_COMMIT, [_m4_nref($1, $1, env_set_flags)],
$1, DB_BEFORE, [_m4_nref($1, $1, dbc_put)],
$1, DB_BTREE, [_m4_nref($1, $1, db_open)],
$1, DB_CDB_ALLDB, [_m4_nref($1, $1, env_set_flags)],
$1, DB_CHKSUM, [_m4_nref($1, $1, db_set_flags)],
$1, DB_CONFIG, [m4_linkpage(M4RELDIR/ref/env/db_config, $1, $1)],
$1, DB_CONSUME, [_m4_nref($1, $1, db_get)],
$1, DB_CONSUME_WAIT, [_m4_nref($1, $1, db_get)],
$1, DB_CREATE, [_m4_nref($1, $1, env_open)],
$1, DB_CURRENT, [_m4_nref($1, $1, dbc_get)],
$1, DB_CXX_NO_EXCEPTIONS, [_m4_nref($1, $1, env_class)],
$1, DB_DBT_APPMALLOC, [_m4_nref($1, $1, dbt_class)],
$1, DB_DBT_MALLOC, [_m4_nref($1, $1, dbt_class)],
$1, DB_DBT_MULTIPLE, [_m4_nref($1, $1, db_associate)],
$1, DB_DBT_PARTIAL, [_m4_nref($1, $1, dbt_class)],
$1, DB_DBT_REALLOC, [_m4_nref($1, $1, dbt_class)],
$1, DB_DBT_USERMEM, [_m4_nref($1, $1, dbt_class)],
$1, DB_DIRECT, [_m4_nref($1, $1, memp_fopen)],
$1, DB_DIRECT_DB, [_m4_nref($1, $1, env_set_flags)],
$1, DB_DSYNC_DB, [_m4_nref($1, $1, env_set_flags)],
$1, DB_DUP, [_m4_nref($1, $1, db_set_flags)],
$1, DB_DUPSORT, [_m4_nref($1, $1, db_set_flags)],
$1, DB_EID_BROADCAST, [_m4_nref($1, $1, rep_transport)],
$1, DB_EID_INVALID, [m4_linkpage(M4RELDIR/ref/rep/id, $1, $1)],
$1, DB_ENCRYPT, [_m4_nref($1, $1, db_set_flags)],
$1, DB_ENCRYPT_AES, [_m4_nref($1, $1, env_set_encrypt)],
$1, DB_EVENT_PANIC, [_m4_nref($1, $1, env_event_notify)],
$1, DB_EVENT_REP_CLIENT, [_m4_nref($1, $1, env_event_notify)],
$1, DB_EVENT_REP_ELECTED, [_m4_nref($1, $1, env_event_notify)],
$1, DB_EVENT_REP_MASTER, [_m4_nref($1, $1, env_event_notify)],
$1, DB_EVENT_REP_NEWMASTER, [_m4_nref($1, $1, env_event_notify)],
$1, DB_EVENT_REP_PERM_FAILED, [_m4_nref($1, $1, env_event_notify)],
$1, DB_EVENT_REP_STARTUPDONE, [_m4_nref($1, $1, env_event_notify)],
$1, DB_EVENT_WRITE_FAILED, [_m4_nref($1, $1, env_event_notify)],
$1, DB_EXCL, [_m4_nref($1, $1, db_open)],
$1, DB_FAST_STAT, [_m4_nref($1, $1, db_stat)],
$1, DB_FIRST, [_m4_nref($1, $1, dbc_get)],
$1, DB_FLUSH, [_m4_nref($1, $1, log_put)],
$1, DB_FORCE, [_m4_nref($1, $1, env_remove)],
$1, DB_FREELIST_ONLY, [_m4_nref($1, $1, dbh_compact)],
$1, DB_FREE_SPACE, [_m4_nref($1, $1, dbh_compact)],
$1, DB_GET_BOTH, [_m4_nref($1, $1, db_get)],
$1, DB_GET_BOTH_RANGE, [_m4_nref($1, $1, db_get)],
$1, DB_GET_RECNO, [_m4_nref($1, $1, dbc_get)],
$1, DB_HASH, [_m4_nref($1, $1, db_open)],
$1, DB_HOME, [m4_linkpage(M4RELDIR/ref/env/naming, $1, $1)],
$1, DB_IGNORE_LEASE, [_m4_nref($1, $1, db_get)],
$1, DB_IMMUTABLE_KEY, [_m4_nref($1, $1, dbh_associate)],
$1, DB_INIT_CDB, [_m4_nref($1, $1, env_open)],
$1, DB_INIT_LOCK, [_m4_nref($1, $1, env_open)],
$1, DB_INIT_LOG, [_m4_nref($1, $1, env_open)],
$1, DB_INIT_MPOOL, [_m4_nref($1, $1, env_open)],
$1, DB_INIT_REP, [_m4_nref($1, $1, env_open)],
$1, DB_INIT_TXN, [_m4_nref($1, $1, env_open)],
$1, DB_INORDER, [_m4_nref($1, $1, db_set_flags)],
$1, DB_JOIN_ITEM, [_m4_nref($1, $1, db_join)],
$1, DB_JOIN_NOSORT, [_m4_nref($1, $1, db_join)],
$1, DB_KEYFIRST, [_m4_nref($1, $1, dbc_put)],
$1, DB_KEYLAST, [_m4_nref($1, $1, dbc_put)],
$1, DB_LAST, [_m4_nref($1, $1, dbc_get)],
$1, DB_LOCKDOWN, [_m4_nref($1, $1, env_open)],
$1, DB_LOCK_DEFAULT, [_m4_nref($1, $1, env_set_lk_detect)],
$1, DB_LOCK_EXPIRE, [_m4_nref($1, $1, env_set_lk_detect)],
$1, DB_LOCK_GET, [_m4_nref($1, $1, lock_vec)],
$1, DB_LOCK_GET_TIMEOUT, [_m4_nref($1, $1, lock_vec)],
$1, DB_LOCK_IREAD, [_m4_nref($1, $1, lock_vec)],
$1, DB_LOCK_IWR, [_m4_nref($1, $1, lock_vec)],
$1, DB_LOCK_IWRITE, [_m4_nref($1, $1, lock_vec)],
$1, DB_LOCK_MAXLOCKS, [_m4_nref($1, $1, env_set_lk_detect)],
$1, DB_LOCK_MAXWRITE, [_m4_nref($1, $1, env_set_lk_detect)],
$1, DB_LOCK_MINLOCKS, [_m4_nref($1, $1, env_set_lk_detect)],
$1, DB_LOCK_MINWRITE, [_m4_nref($1, $1, env_set_lk_detect)],
$1, DB_LOCK_NOWAIT, [_m4_nref($1, $1, lock_vec)],
$1, DB_LOCK_OLDEST, [_m4_nref($1, $1, env_set_lk_detect)],
$1, DB_LOCK_PUT, [_m4_nref($1, $1, lock_vec)],
$1, DB_LOCK_PUT_ALL, [_m4_nref($1, $1, lock_vec)],
$1, DB_LOCK_PUT_OBJ, [_m4_nref($1, $1, lock_vec)],
$1, DB_LOCK_RANDOM, [_m4_nref($1, $1, env_set_lk_detect)],
$1, DB_LOCK_READ, [_m4_nref($1, $1, lock_vec)],
$1, DB_LOCK_TIMEOUT, [_m4_nref($1, $1, lock_vec)],
$1, DB_LOCK_WRITE, [_m4_nref($1, $1, lock_vec)],
$1, DB_LOCK_YOUNGEST, [_m4_nref($1, $1, env_set_lk_detect)],
$1, DB_LOG_AUTO_REMOVE, [_m4_nref($1, $1, env_log_set_config)],
$1, DB_LOG_BUFFER_FULL, [_m4_nref($1, $1, env_log_set_config)],
$1, DB_LOG_DIRECT, [_m4_nref($1, $1, env_log_set_config)],
$1, DB_LOG_DSYNC, [_m4_nref($1, $1, env_log_set_config)],
$1, DB_LOG_IN_MEMORY, [_m4_nref($1, $1, env_log_set_config)],
$1, DB_LOG_ZERO, [_m4_nref($1, $1, env_log_set_config)],
$1, DB_MPOOL_CREATE, [_m4_nref($1, $1, memp_fget)],
$1, DB_MPOOL_DIRTY, [_m4_nref($1, $1, memp_fget)],
$1, DB_MPOOL_EDIT, [_m4_nref($1, $1, memp_fget)],
$1, DB_MPOOL_LAST, [_m4_nref($1, $1, memp_fget)],
$1, DB_MPOOL_NEW, [_m4_nref($1, $1, memp_fget)],
$1, DB_MPOOL_NOFILE, [_m4_nref($1, $1, memp_set_flags)],
$1, DB_MPOOL_UNLINK, [_m4_nref($1, $1, memp_set_flags)],
$1, DB_MULTIPLE, [_m4_nref($1, $1, dbc_get)],
$1, DB_MULTIPLE_INIT, [_m4_nref($1, $1, dbt_bulk)],
$1, DB_MULTIPLE_KEY, [_m4_nref($1, $1, dbc_get)],
$1, DB_MULTIPLE_KEY_NEXT, [_m4_nref($1, $1, dbt_bulk)],
$1, DB_MULTIPLE_NEXT, [_m4_nref($1, $1, dbt_bulk)],
$1, DB_MULTIPLE_RECNO_NEXT, [_m4_nref($1, $1, dbt_bulk)],
$1, DB_MULTIVERSION, [_m4_nref($1, $1, db_open)],
$1, DB_MUTEX_PROCESS_ONLY, [_m4_nref($1, $1, env_set_isalive)],
$1, DB_MUTEX_SELF_BLOCK, [_m4_nref($1, $1, mutex_alloc)],
$1, DB_NEXT, [_m4_nref($1, $1, dbc_get)],
$1, DB_NEXT_DUP, [_m4_nref($1, $1, dbc_get)],
$1, DB_NEXT_NODUP, [_m4_nref($1, $1, dbc_get)],
$1, DB_NODUPDATA, [_m4_nref($1, $1, db_put)],
$1, DB_NOLOCKING, [_m4_nref($1, $1, env_set_flags)],
$1, DB_NOMMAP, [_m4_nref($1, $1, env_set_flags)],
$1, DB_NOORDERCHK, [_m4_nref($1, $1, db_verify)],
$1, DB_NOOVERWRITE, [_m4_nref($1, $1, db_put)],
$1, DB_NOPANIC, [_m4_nref($1, $1, env_set_flags)],
$1, DB_NOSYNC, [_m4_nref($1, $1, db_close)],
$1, DB_ODDFILESIZE, [_m4_nref($1, $1, memp_fopen)],
$1, DB_ORDERCHKONLY, [_m4_nref($1, $1, db_verify)],
$1, DB_OVERWRITE, [_m4_nref($1, $1, env_set_flags)],
$1, DB_PANIC_ENVIRONMENT, [_m4_nref($1, $1, env_set_flags)],
$1, DB_POSITION, [_m4_nref($1, $1, dbc_dup)],
$1, DB_PREV, [_m4_nref($1, $1, dbc_get)],
$1, DB_PREV_DUP, [_m4_nref($1, $1, dbc_get)],
$1, DB_PREV_NODUP, [_m4_nref($1, $1, dbc_get)],
$1, DB_PRINTABLE, [_m4_nref($1, $1, db_verify)],
$1, DB_PRIORITY_DEFAULT, [_m4_nref($1, $1, dbc_set_priority)],
$1, DB_PRIORITY_HIGH, [_m4_nref($1, $1, dbc_set_priority)],
$1, DB_PRIORITY_LOW, [_m4_nref($1, $1, dbc_set_priority)],
$1, DB_PRIORITY_UNCHANGED, [_m4_nref($1, $1, memp_fput)],
$1, DB_PRIORITY_VERY_HIGH, [_m4_nref($1, $1, dbc_set_priority)],
$1, DB_PRIORITY_VERY_LOW, [_m4_nref($1, $1, dbc_set_priority)],
$1, DB_PRIVATE, [_m4_nref($1, $1, env_open)],
$1, DB_QUEUE, [_m4_nref($1, $1, db_open)],
$1, DB_RDONLY, [_m4_nref($1, $1, db_open)],
$1, DB_READ_COMMITTED, [_m4_nref($1, $1, db_cursor)],
$1, DB_READ_UNCOMMITTED, [_m4_nref($1, $1, db_open)],
$1, DB_RECNO, [_m4_nref($1, $1, db_open)],
$1, DB_RECNUM, [_m4_nref($1, $1, db_set_flags)],
$1, DB_RECOVER, [_m4_nref($1, $1, env_open)],
$1, DB_RECOVER_FATAL, [_m4_nref($1, $1, env_open)],
$1, DB_REGION_INIT, [_m4_nref($1, $1, env_set_flags)],
$1, DB_REGISTER, [_m4_nref($1, $1, env_open)],
$1, DB_RENUMBER, [_m4_nref($1, $1, db_set_flags)],
$1, DB_REPMGR_ACKS_ALL, [_m4_nref($1, $1, repmgr_ack_policy)],
$1, DB_REPMGR_ACKS_ALL_PEERS, [_m4_nref($1, $1, repmgr_ack_policy)],
$1, DB_REPMGR_ACKS_NONE, [_m4_nref($1, $1, repmgr_ack_policy)],
$1, DB_REPMGR_ACKS_ONE, [_m4_nref($1, $1, repmgr_ack_policy)],
$1, DB_REPMGR_ACKS_ONE_PEER, [_m4_nref($1, $1, repmgr_ack_policy)],
$1, DB_REPMGR_ACKS_QUORUM, [_m4_nref($1, $1, repmgr_ack_policy)],
$1, DB_REPMGR_CONF_2SITE_STRICT, [_m4_nref($1, $1, rep_config)],
$1, DB_REPMGR_CONNECTED, [_m4_nref($1, $1, repmgr_site_list)],
$1, DB_REPMGR_DISCONNECTED, [_m4_nref($1, $1, repmgr_site_list)],
$1, DB_REP_ACK_TIMEOUT, [_m4_nref($1, $1, rep_timeout)],
$1, DB_REP_ANYWHERE, [_m4_nref($1, $1, rep_transport)],
$1, DB_REP_CHECKPOINT_DELAY, [_m4_nref($1, $1, rep_timeout)],
$1, DB_REP_CLIENT, [_m4_nref($1, $1, repmgr_start)],
$1, DB_REP_CONF_BULK, [_m4_nref($1, $1, rep_config)],
$1, DB_REP_CONF_DELAYCLIENT, [_m4_nref($1, $1, rep_config)],
$1, DB_REP_CONF_LEASE, [_m4_nref($1, $1, rep_config)],
$1, DB_REP_CONF_NOAUTOINIT, [_m4_nref($1, $1, rep_config)],
$1, DB_REP_CONF_NOWAIT, [_m4_nref($1, $1, rep_config)],
$1, DB_REP_CONNECTION_RETRY, [_m4_nref($1, $1, rep_timeout)],
$1, DB_REP_ELECTION, [_m4_nref($1, $1, repmgr_start)],
$1, DB_REP_ELECTION_RETRY, [_m4_nref($1, $1, rep_timeout)],
$1, DB_REP_ELECTION_TIMEOUT, [_m4_nref($1, $1, rep_timeout)],
$1, DB_REP_FULL_ELECTION_TIMEOUT, [_m4_nref($1, $1, rep_timeout)],
$1, DB_REP_HANDLE_DEAD, [_m4_nref($1, $1, db_put)],
$1, DB_REP_HEARTBEAT_MONITOR, [_m4_nref($1, $1, rep_timeout)],
$1, DB_REP_HEARTBEAT_SEND, [_m4_nref($1, $1, rep_timeout)],
$1, DB_REP_LEASE_EXPIRED, [_m4_nref($1, $1, rep_config)],
$1, DB_REP_LEASE_TIMEOUT, [_m4_nref($1, $1, rep_timeout)],
$1, DB_REP_LOCKOUT, [_m4_nref($1, $1, db_put)],
$1, DB_REP_MASTER, [_m4_nref($1, $1, repmgr_start)],
$1, DB_REP_NOBUFFER, [_m4_nref($1, $1, rep_transport)],
$1, DB_REP_PERMANENT, [_m4_nref($1, $1, rep_transport)],
$1, DB_REP_REREQUEST, [_m4_nref($1, $1, rep_transport)],
$1, DB_REP_UNAVAIL, [_m4_nref($1, $1, rep_elect)],
$1, DB_REVSPLITOFF, [_m4_nref($1, $1, db_set_flags)],
$1, DB_RMW, [_m4_nref($1, $1, dbc_get)],
$1, DB_RPCCLIENT, [_m4_nref($1, $1, env_class)],
$1, DB_SALVAGE, [_m4_nref($1, $1, db_verify)],
$1, DB_SEQ_DEC, [_m4_nref($1, $1, seq_set_flags)],
$1, DB_SEQ_INC, [_m4_nref($1, $1, seq_set_flags)],
$1, DB_SEQ_WRAP, [_m4_nref($1, $1, seq_set_flags)],
$1, DB_SET, [_m4_nref($1, $1, dbc_get)],
$1, DB_SET_LOCK_TIMEOUT, [_m4_nref($1, $1, env_set_timeout)],
$1, DB_SET_RANGE, [_m4_nref($1, $1, dbc_get)],
$1, DB_SET_RECNO, [_m4_nref($1, $1, db_get)],
$1, DB_SET_TXN_TIMEOUT, [_m4_nref($1, $1, env_set_timeout)],
$1, DB_SNAPSHOT, [_m4_nref($1, $1, db_set_flags)],
$1, DB_STAT_ALL, [_m4_nref($1, $1, env_stat)],
$1, DB_STAT_CLEAR, [_m4_nref($1, $1, lock_stat)],
$1, DB_STAT_LOCK_CONF, [_m4_nref($1, $1, lock_stat_print)],
$1, DB_STAT_LOCK_LOCKERS, [_m4_nref($1, $1, lock_stat_print)],
$1, DB_STAT_LOCK_OBJECTS, [_m4_nref($1, $1, lock_stat_print)],
$1, DB_STAT_LOCK_PARAMS, [_m4_nref($1, $1, lock_stat_print)],
$1, DB_STAT_MEMP_HASH, [_m4_nref($1, $1, memp_stat_print)],
$1, DB_STAT_SUBSYSTEM, [_m4_nref($1, $1, env_stat)],
$1, DB_SYSTEM_MEM, [_m4_nref($1, $1, env_open)],
$1, DB_THREAD, [_m4_nref($1, $1, env_open)],
$1, DB_THREADID_STRLEN, [_m4_nref($1, $1, env_set_thread_id_string)],
$1, DB_TIME_NOTGRANTED, [_m4_nref($1, $1, env_set_flags)],
$1, DB_TRUNCATE, [_m4_nref($1, $1, db_open)],
$1, DB_TXN_ABORT, [_m4_nref($1, $1, env_set_app_dispatch)],
$1, DB_TXN_APPLY, [_m4_nref($1, $1, env_set_app_dispatch)],
$1, DB_TXN_BACKWARD_ROLL, [_m4_nref($1, $1, env_set_app_dispatch)],
$1, DB_TXN_FORWARD_ROLL, [_m4_nref($1, $1, env_set_app_dispatch)],
$1, DB_TXN_NOSYNC, [_m4_nref($1, $1, env_set_flags)],
$1, DB_TXN_NOT_DURABLE, [_m4_nref($1, $1, db_set_flags)],
$1, DB_TXN_NOWAIT, [_m4_nref($1, $1, txn_begin)],
$1, DB_TXN_PRINT, [_m4_nref($1, $1, env_set_app_dispatch)],
$1, DB_TXN_SNAPSHOT, [_m4_nref($1, $1, txn_begin)],
$1, DB_TXN_SYNC, [_m4_nref($1, $1, txn_begin)],
$1, DB_TXN_WAIT, [_m4_nref($1, $1, txn_begin)],
$1, DB_TXN_WRITE_NOSYNC, [_m4_nref($1, $1, env_set_flags)],
$1, DB_UNKNOWN, [_m4_nref($1, $1, db_open)],
$1, DB_UPGRADE, [_m4_nref($1, $1, db_set_feedback)],
$1, DB_USE_ENVIRON, [_m4_nref($1, $1, env_open)],
$1, DB_USE_ENVIRON_ROOT, [_m4_nref($1, $1, env_open)],
$1, DB_VERB_DEADLOCK, [_m4_nref($1, $1, env_set_verbose)],
$1, DB_VERB_FILEOPS, [_m4_nref($1, $1, env_set_verbose)],
$1, DB_VERB_FILEOPS_ALL, [_m4_nref($1, $1, env_set_verbose)],
$1, DB_VERB_RECOVERY, [_m4_nref($1, $1, env_set_verbose)],
$1, DB_VERB_REGISTER, [_m4_nref($1, $1, env_set_verbose)],
$1, DB_VERB_REPLICATION, [_m4_nref($1, $1, env_set_verbose)],
$1, DB_VERB_REPMGR_CONNFAIL, [_m4_nref($1, $1, env_set_verbose)],
$1, DB_VERB_REPMGR_MISC, [_m4_nref($1, $1, env_set_verbose)],
$1, DB_VERB_REP_ELECT, [_m4_nref($1, $1, env_set_verbose)],
$1, DB_VERB_REP_LEASE, [_m4_nref($1, $1, env_set_verbose)],
$1, DB_VERB_REP_MISC, [_m4_nref($1, $1, env_set_verbose)],
$1, DB_VERB_REP_MSGS, [_m4_nref($1, $1, env_set_verbose)],
$1, DB_VERB_REP_SYNC, [_m4_nref($1, $1, env_set_verbose)],
$1, DB_VERB_WAITSFOR, [_m4_nref($1, $1, env_set_verbose)],
$1, DB_VERIFY, [_m4_nref($1, $1, db_set_feedback)],
$1, DB_WRITECURSOR, [_m4_nref($1, $1, db_cursor)],
$1, DB_XA_CREATE, [_m4_nref($1, $1, db_class)],
$1, DB_XIDDATASIZE, [_m4_nref($1, $1, txn_prepare)],
$1, DB_YIELDCPU, [_m4_nref($1, $1, env_set_flags)],
$1, TMPDIR, [m4_linkpage(M4RELDIR/ref/env/naming, $1, $1)],
$1, db_recno_t, [_m4_nref($1, $1, dbt_class)],
dnl #################################################################
dnl Error returns.
dnl #################################################################
$1, DB_BUFFER_SMALL, [_m4_nref($1, $1, dbt_class)],
$1, DB_DONOTINDEX, [_m4_nref($1, $1, dbh_associate)],
$1, DB_KEYEMPTY, [m4_linkpage(M4RELDIR/ref/program/errorret, $1, $1)],
$1, DB_KEYEXIST, [_m4_nref($1, $1, dbc_put)],
$1, DB_LOCK_DEADLOCK, [m4_linkpage(M4RELDIR/ref/program/errorret, $1, $1)],
$1, DB_LOCK_NOTGRANTED, [m4_linkpage(M4RELDIR/ref/program/errorret, $1, $1)],
$1, DB_NOSERVER, [_m4_nref($1, $1, env_set_rpc_server)],
$1, DB_NOSERVER_HOME, [_m4_nref($1, $1, env_set_rpc_server)],
$1, DB_NOSERVER_ID, [_m4_nref($1, $1, env_set_rpc_server)],
$1, DB_NOTFOUND, [m4_linkpage(M4RELDIR/ref/program/errorret, $1, $1)],
$1, DB_OLD_VERSION, [_m4_nref($1, $1, db_open)],
$1, DB_PAGE_NOTFOUND, [_m4_nref($1, $1, memp_fget)],
$1, DB_REPMGR_PEER, [_m4_nref($1, $1, rep_remote_addr)],
$1, DB_REP_DUPMASTER, [_m4_nref($1, $1, rep_message)],
$1, DB_REP_HOLDELECTION, [_m4_nref($1, $1, rep_message)],
$1, DB_REP_IGNORE, [_m4_nref($1, $1, rep_message)],
$1, DB_REP_ISPERM, [_m4_nref($1, $1, rep_message)],
$1, DB_REP_JOIN_FAILURE, [_m4_nref($1, $1, rep_message)],
$1, DB_REP_NEWSITE, [_m4_nref($1, $1, rep_message)],
$1, DB_REP_NOTPERM, [_m4_nref($1, $1, rep_message)],
$1, DB_RUNRECOVERY, [m4_linkpage(M4RELDIR/ref/program/errorret, $1, $1)],
$1, DB_SECONDARY_BAD, [m4_linkpage(M4RELDIR/ref/program/errorret, $1, $1)],
$1, DB_VERIFY_BAD, [m4_linkpage(M4RELDIR/ref/program/errorret, $1, $1)],
$1, DB_VERSION_MISMATCH, [_m4_nref($1, $1, env_open)],
$1, EINVAL, EINVAL,
dnl #################################################################
dnl Check XML, or complain if it's a name we don't know.
dnl #################################################################
ifelse(M4PRODUCT, XML, _m4_xmllist($1), UNREF==$1))])
dnl #################################################################
dnl Specific API references
dnl	$1: name
dnl
dnl XXX
dnl Don't remove the empty quotes before the popdef calls, it works
dnl around a bug -- the popdef doesn't get expanded for some reason.
dnl #################################################################
define(m4_refc, [pushdef([M4API], C_API)m4_ref($1)[]popdef([M4API])])
define(m4_refcxx, [pushdef([M4API], CXX_API)m4_ref($1)[]popdef([M4API])])
