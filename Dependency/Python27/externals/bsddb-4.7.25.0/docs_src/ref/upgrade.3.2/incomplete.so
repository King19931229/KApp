m4_comment([$Id: incomplete.so,v 1.9 2004/08/15 03:22:57 bostic Exp $])

define(BDB_LOC, ..)

m4_ref_title(Upgrading m4_db Applications,
    Release 3.2: DB_INCOMPLETE,,
    upgrade.3.2/renumber, upgrade.3.2/tx_recover)

m4_p([dnl
There are a number of functions that flush pages from the m4_db shared
memory buffer pool to disk.  Most of those functions can potentially
fail because a page that needs to be flushed is not currently available.
However, this is not a hard failure and is rarely cause for concern.
In the m4_db 3.2 release, the C++ API (if that API is configured to
throw exceptions) and the Java API have been changed so that this
failure does not throw an exception, but rather returns a non-zero error
code of DB_INCOMPLETE.])

m4_p([dnl
The following C++ methods will return DB_INCOMPLETE rather than throw
an exception: m4_refcxx(dbh_close), m4_refcxx(dbh_sync), DbEnv::memp_sync,
DbEnv::txn_checkpoint, DbMpoolFile::memp_fsync.])

m4_p([dnl
The following Java methods are now declared "public int" rather than
"public void", and will return Db.DB_INCOMPLETE rather than throw an
exception: Db.close, Db.sync, and DbEnv.checkpoint.])

m4_p([dnl
It is likely that the only change required by any application will be
those currently checking for a DB_INCOMPLETE return that has
been encapsulated in an exception.])

m4_page_footer
