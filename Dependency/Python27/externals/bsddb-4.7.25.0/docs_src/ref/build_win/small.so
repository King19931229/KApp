m4_comment([$Id: small.so,v 10.5 2006/08/24 16:32:27 bostic Exp $])

m4_ref_title(Building m4_db for Windows systems,
    Building a small memory footprint library,,
    build_win/intro, build_win/test)

m4_p([dnl
For applications that don't require all of the functionality of the full
m4_db library, an option is provided to build a static library with
certain functionality disabled.  In particular, cryptography, hash and
queue access methods, replication and verification are all turned off.
This can reduce the memory footprint of m4_db significantly.])

m4_p([dnl
In general on Windows systems, you will want to evaluate the size of the
final application, not the library build.  The Microsoft LIB file format
(like UNIX archives) includes copies of all of the object files and
additional information.  The linker rearranges symbols and strips out
the overhead, and the resulting application is much smaller than the
library.   There is also a Visual C++ optimization to "Minimize size"
that will reduce the library size by a few percent.])

m4_p([dnl
A Visual C++ project file called m4_path(db_small.dsp)  is provided for
this small memory configuration, but is not included in the workspace
by default.  To build, open Visual Studio and go to the m4_italic(File)
menu.  Choose m4_italic(Open Workspace), change m4_italic(Files of Type)
to m4_italic(Projects (.dsp)) and open m4_italic(db_small.dsp).])

m4_p([dnl
The project supports two configurations - m4_italic(Release) and
m4_italic(Debug).  During a build (F7), static libraries are created in
m4_path(Release) or m4_path(Debug), respectively.  The library name is
m4_path(libdb_small[]M4MAJOR[]M4MINOR[]sd.lib) for the debug build, or
m4_path(libdb_small[]M4MAJOR[]M4MINOR[]s.lib) for the release build.])

m4_p([dnl
For assistance in further reducing the size of the m4_db library, or in
building small memory footprint libraries on other systems, please
contact m4_db support.])

m4_page_footer
