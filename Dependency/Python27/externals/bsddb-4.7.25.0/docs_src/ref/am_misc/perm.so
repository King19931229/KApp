m4_comment([$Id: perm.so,v 1.4 2002/06/20 12:53:58 bostic Exp $])

m4_ref_title(Access Methods,
    Retrieved key/data permanence for C/C++,
    [retrieved key/data @permanence, retrieved @key/data permanence],
    am_misc/struct, am_misc/error)

m4_p([dnl
When using the non-cursor m4_db calls to retrieve key/data items under
the C/C++ APIs (for example, m4_ref(dbh_get)), the memory to which the
pointer stored into the m4_ref(Dbt) refers is only valid until the next
call to m4_db using the m4_ref(Db) handle.  (This includes m4_bold(any)
use of the returned m4_ref(Db) handle, including by another thread of
control within the process.  For this reason, when multiple threads are
using the returned m4_ref(Db) handle concurrently, one of the
m4_ref(DB_DBT_MALLOC), m4_ref(DB_DBT_REALLOC) or m4_ref(DB_DBT_USERMEM)
flags must be specified with any non-cursor m4_ref(Dbt) used for key or
data retrieval.)])

m4_p([dnl
When using the cursor m4_db calls to retrieve key/data items under the
C/C++ APIs (for example, m4_ref(dbc_get)), the memory to which the
pointer stored into the m4_ref(Dbt) refers is only valid until the next
call to m4_db using the m4_ref(Dbc) handle returned by m4_ref(dbh_cursor).])

m4_page_footer
